/* ==========================================================================
    Few points to remeber for every CSS property
    +++++++++++++++++++++++++++++++++++++++++++++++
    • Default values for different elements
    • Overriding & different values that can be given
    • Inheritence
    • Can they be applied to all elements
    • Can they be animated
   ========================================================================== */
/*

Box related style properties
+++++++++++++++++++++++++++++++++++++++++++

~  width: <length>
    ^ default value auto - for block level it is 100%, for inline it is content width
    ^ This property doesn't gets inherited
    ^ This property can be applied to 
                all block level elements
                all floated elements
                all positioned elements
    ^ You can animate

~  min-width: <length>
    ^ default value auto - for block level it is 100%, for inline it is content width
    ^ This property doesn't gets inherited
    ^ This property can be applied to 
                all block level elements
                all floated elements
                all positioned elements
    ^ You can animate

~  max-width: <length>
    ^ default value auto - for block level it is 100%, for inline it is content width
    ^ This property doesn't gets inherited
    ^ This property can be applied to 
                all block level elements
                all floated elements
                all positioned elements
    ^ You can animate

~  height: <length>
    ^ default value auto
    ^ This property doesn't gets inherited
    ^ This property can be applied to 
                all block level elements
                all floated elements
                all positioned elements
    ^ You can animate

~  min-height: <length>
    ^ default value auto
    ^ This property doesn't gets inherited
    ^ This property can be applied to 
                all block level elements
                all floated elements
                all positioned elements
    ^ You can animate

~  max-height: <length>
    ^ default value auto
    ^ This property doesn't gets inherited
    ^ This property can be applied to 
                all block level elements
                all floated elements
                all positioned elements
    ^ You can animate

~  overflow: visible | hidden | scroll | auto
    ^ default value visible
    ^ This property doesn't gets inherited
    ^ This property can be to all elements
    ^ You can animate

~  overflow-x: visible | hidden | scroll | auto
~  overflow-y: visible | hidden | scroll | auto

~  padding-top: 
~  padding-right: 
~  padding-bottom: 
~  padding-left: 

~  padding: 
    ^ default value is
            for ol and ul padding-left 40px
    ^ This property doesn't gets inherited
    ^ This property can be applied to all elements, except
            padding-top and padding-bottom, they won't
            work on inline elements
    ^ You can animate



~  margin-top: 
~  margin-right: 
~  margin-bottom: 
~  margin-left: 

~  margin: 
    ^ default value 
    ^ This property doesn't gets inherited
    ^ This property can be applied to all elements, except
            margin-top and margin-bottom, they won't
            work on inline elements
    ^ You can animate

~  box-sizing: content-box | padding-box | border-box
    ^ default value content-box
    ^ This property doesn't gets inherited
    ^ This property can be to all elements
    ^ You can't animate


~  float : none | left | right
    ^ default value none
    ^ This property doesn't gets inherited
    ^ This property can be to all elements
    ^ You can animate


~  clear: none | left | right | both
    ^ default value none
    ^ This property doesn't gets inherited
    ^ This property can be to all elements
    ^ You can't animate









cursor:
https://developer.mozilla.org/en-US/docs/Web/CSS/cursor



opacity 
resize - none | both | horizontal | vertical | block | inline
Flexbox
column-count
column-gap
column-fill – auto | balance
column-rule - <'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>

grids


auto;
inherit;
*/

/* ==========================================================================
   Demo of Grid related properties
   ========================================================================== */
.wrapper{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  /*display: inline-grid;*/
  height: 800px;
}
.wrapper >div{
  background-color: #ccc;
}

.wrapper2{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  /*grid-template-columns: repeat(4,1fr);*/
  grid-template-rows: 400px 200px;
  height: 800px;
}
.wrapper2 >div{
  background-color: #ccc;
}
.wrapper3{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns: repeat(4,1fr);
  grid-template-rows: 400px 200px;
  /*grid-column-gap: 1em;
  grid-row-gap: 1em;*/
  grid-gap: 1em 1.5em;
  height: 800px;
}
.wrapper3 >div{
  background-color: #ccc;
}
.wrapper4{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns: repeat(4,1fr);
  grid-template-rows: 400px 200px;
  grid-gap: 1em 1.5em;
  justify-items: start;
  /*justify-items: end;*/
  /*justify-items: center;*/
  /*justify-items: stretch;*/
}
.wrapper4 >div{
  background-color: #ccc;
}
.wrapper5{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns: repeat(4,1fr);
  grid-template-rows: 100px 200px;
  grid-gap: 1em;
  /*align-items: start;*/
  /*align-items: end;*/
  align-items: center;
  /*align-items: stretch;*/
}
.wrapper5 > div{
  background-color: pink;
}
.wrapper6{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns: 200px 400px 100px 50px;
  grid-template-rows: 100px 200px;
  grid-gap: 1em;
  /*justify-content: start;*/
  /*justify-content: space-around;*/
  justify-content: space-evenly;
}
.wrapper6 > div{
  background-color: wheat;
  border: 1px solid red;
}
.wrapper7{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns:[one] 200px [two] 400px [three] 100px [four] 50px;
  grid-template-rows: 100px 200px;
  grid-gap: 1em;
}
.wrapper7 > div{
  background-color: wheat;
}
.wrapper7 .box1{
  grid-column-start: one;
  grid-column-end: span 2;
  background-color: green;

}
.wrapper8{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns:[one] 200px [two] 400px [three] 100px [four] 50px;
  grid-template-rows:[row-one] 100px [row-two]200px [last-row];
  grid-gap: 1em;
}
.wrapper8 > div{
  background-color: wheat;
}
.wrapper8 .box2{
  grid-row-start: row-one;
  grid-row-end:span 2;
  background-color: red;
}
.wrapper9{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns:[one] 200px [two] 400px [three] 100px [four] 50px;
  grid-template-rows:[row-one] 100px [row-two]200px [last-row];
  grid-gap: 1em;
}
.wrapper9 > div{
  background-color: wheat;
}
.wrapper9 .box3{
  grid-row: 1/ span 2;
  background-color: blue;
}
.wrapper10{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template-columns:1fr;
  grid-template-rows:[row-one] 100px [row-two]200px [row-three] 100px[row-four];
  grid-gap: 1em;
  grid-template-areas: 
  "header header header header"
  "content content content sidebar"
  "footer footer footer footer" 
}
.wrapper10 > div{
  background-color: wheat;
}
.wrapper10 .box1{
  grid-area: header;
  grid-column: 1/6;
  grid-row: 1/2;
}
.wrapper10 .box2{
  grid-area: content;
  grid-column: 1/6;
  grid-row: 2/3;
}
.wrapper10 .box3{
  grid-area: sidebar;
  grid-column: 1/6;
  grid-row: 3/4;
}
.wrapper10 .box4{
  grid-area: footer;
  grid-column: 1/6;
  grid-row: 4/5;
}
@media(min-width: 768px){
  .wrapper10 .box2{
    grid-column: 1/4;
    grid-row: 2/3;
  }
  .wrapper10 .box3{
    grid-column: 4/6;
    grid-row: 2/3;
  }
  .wrapper10 .box4{
    grid-row: 3/4;
  }
}
.wrapper11{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template:[row-one] "header header header header" 100px [row-two] "content content content sidebar" 200px  [row-three] "footer footer footer footer" 100px / 1fr;
  /*grid-template-columns:1fr;*/
  /*grid-template-rows:[row-one] 100px [row-two]200px [row-three] 100px[row-four];*/
  grid-gap: 1em;
/*  grid-template-areas: 
  "header header header header"
  "content content content sidebar"
  "footer footer footer footer"*/ 
}
.wrapper11 > div{
  background-color: wheat;
}
.wrapper11 .box1{
  grid-area: header;
  grid-column: 1/6;
  grid-row: 1/2;
}
.wrapper11 .box2{
  grid-area: content;
  grid-column: 1/3;
  grid-row: 2/3;
}
.wrapper11 .box3{
  grid-area: sidebar;
  grid-column: 3/5;
  grid-row: 2/3;
}
.wrapper11 .box4{
  grid-area: footer;
  grid-column: 1/5;
  grid-row: 3/4;
}

.wrapper12{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
  grid-template:[row-one] "header header header header" 100px [row-two] "content content content sidebar" 200px  [row-three] "footer footer footer footer" 100px / 1fr;
  /*grid-template-columns:1fr;*/
  /*grid-template-rows:[row-one] 100px [row-two]200px [row-three] 100px[row-four];*/
  grid-gap: 1em;
/*  grid-template-areas: 
  "header header header header"
  "content content content sidebar"
  "footer footer footer footer"*/ 
}
.wrapper12 > div{
  background-color: wheat;
}
.wrapper12 .box1{
  grid-area: header;
  grid-column: 1/6;
  grid-row: 1/2;
  align-self: end;
}
.wrapper12 .box2{
  grid-area: content;
  grid-column: 1/3;
  grid-row: 2/3;
  align-self: start;
}
.wrapper12 .box3{
  grid-area: sidebar;
  grid-column: 3/5;
  grid-row: 2/3;
  align-self: center;
}
.wrapper12 .box4{
  grid-area: footer;
  grid-column: 1/5;
  grid-row: 3/4;
  align-self: stretch;
}
.wrapper13{
  background-color: #F3E5F5;
  padding: 1em;
  display: grid;
 /* grid-template-columns:80px 80px;
  grid-template-rows: 100px 100px;*/
  grid-auto-columns: 80px;
  grid-auto-rows: 100px;
  grid-gap: 1em;
}
.wrapper13 > div{
  background-color: pink;
}
.wrapper13 .box1{
  grid-column: 1/1;
  grid-row:  2/3;
}
.wrapper13 .box2{
  grid-column: 4/5;
  grid-row:  2/3;
}








